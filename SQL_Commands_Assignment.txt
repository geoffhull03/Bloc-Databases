1. List the commands for adding, updating, and deleting data

    Answer:
      Adding: INSERT INTO
      Updating: UPDATE
      Deleting: DELETE

2. Explain the structure for each type of command.

    Answer: The structure begins with a command (example: INSERT INTO), followed by the name of the table (example: cars),
    then ended with the actual command. So, if I wanted to add a new car to a cars database, it could look like this:
      INSERT INTO cars VALUES (10, "Toyota", "Corolla")

      This assumes that the values are (id, Make, Model)

3. What are some the data types that can be used in tables? Give a real world example of each.

    Answer:
      A number data type: Money! This data type could be used to record transactions.
      A text data type: Could be any sort of text. This could record any types of titles (ex: movies)
      A data type could also be the date/time or a timestamp of a particular transaction.

4. Think through how to create a new table to hold a list of people invited to a wedding.
This table needs to have first and last name, whether they sent in their RSVP, the number of guests they are bringing,
and the number of meals (1 for adults and 1/2 for children).

    a. Which data type would you use to store each of the following pieces of information?
        First and last name.
          A: Text
        Whether they sent in their RSVP.
          A: Text or Boolean
        Number of guests.
          A: integer
        Number of meals.
          A: integer

    b. Write a command that makes the table to track the wedding.
          A: CREATE TABLE wedding (
            first_name text,
            last_name text,
            guests integer,
            meals integer
          );
    c. Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.
          A: ALTER TABLE wedding ADD COLUMN thank_you boolean;
    d. You have decided to move the data about the meals to another table, so write a command to remove the column storing
    the number meals from the wedding table.
          A: ALTER TABLE drop COLUMN meals;
    e. The guests are going to need a place to sit at the reception, so write a statement that adds a column for table number.
          A: ALTER TABLE wedding ADD COLUMN table_number integer;
    f. The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from
    the database.
          A: DROP TABLE wedding;

5.Write a command to make a new table to hold the books in a library with the columns
 ISBN, title, author, genre, publishing date, number of copies, and available copies.

    Answer: CREATE TABLE books (
              ISBN integer,
              title text,
              author text,
              genre text,
              publishing_date date,
              copies integer,
              available integer
            );

    a. Find three books and add their information to the table.
        A: INSERT INTO books (isbn, title, author, genre, publishing_date, copies, available)
            VALUES
            (0345520106, "The Book of Basketball", "Bill Simmons", "Sports", 12/7/2010, 4, 3),
            (0345468260, "Timeline", "Michael Chrichton", "Sci-Fi", 11/4/2003, 10, 1),
            (0060873167), "Next", "Michael Chricton", "Sci-Fi", 10/28/2008, 5, 0);
    b. Say that someone has just checked out one of the books. Change the available copies column to 1 less.
        A: UPDATE books SET available=0 WHERE isbn=0345468260;
    c. Now one of the books has been added to the banned books list. Remove it from the table.
        A: DELETE FROM books WHERE isbn=0345520106;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched,
country of origin, a brief description of the mission, orbiting body, if it is currently operating,
and approximate miles from Earth.

    CREATE TABLE spacecrafts(
    id integer,
    name text,
    launch_year integer,
    origin text,
    description text,
    orbiting_body text,
    is_operating boolean,
    miles_from_earth integer
    );

    a. Add 3 non-Earth-orbiting satellites to the table.
        A: INSERT INTO spacecrafts (id, name, launch_year, origin, description, orbiting_body, is_operating, miles_from_earth)
        VALUES
        (3, "Mars Explorer", 2011, "Earth", "Monitoring Mars for Organisms", "Mars", TRUE, 39.9)
        (4, "Jupiter Explorer", 2008, "Earth", "Finding out what's in the red spot", "Jupiter", FALSE, 365)
        (5, "Venus Explorer", 2001, "Earth", "Find out temp of Venus", "Venus", FALSE, 162)
    b. Remove one of the satellites from the table since it has just been crashed into the planet.
        A: DELETE FROM spacecrafts WHERE id=5
    c. Edit another satellite because it is no longer operating and change the value to reflect that.
        A: UPDATE spacecrafts SET is_operating=FALSE WHERE id=3

7. Write a command to make a new table to hold the emails in your inbox.
This table should include an id, the subject line, the sender, any additional recipients, the body of the email,
the timestamp, whether or not it’s been read, and the id of the email chain it’s in.

  CREATE TABLE emails (
    id integer,
    subject_line text,
    sender text,
    additional_recipients text
    body text,
    timestamp timestamp,
    read boolean
    chain_id integer
  );

    a. Add 3 new emails to the inbox.
          A: INSERT INTO emails (id, subject_line, sender, additional_recipients, body, timestamp, read, chain_id)
          VALUES
          (1, "Hello", "joe@joe.com", "john@john.com", "How are you guys doing?", 2017-07-07, FALSE, 100)
          (2, "TPS Reports", "john@john.com", "geoff@geoff.com", "Don't forget to file your paperwork!", 2017-09-10, TRUE, 310)
          (3, "TPS Reports", "geoff@geoff.com", "joe@joe.com", "I already filed my TPS reports", 2017-09-10, FALSE, 310);
    b. You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.
          A: DELETE FROM emails WHERE id=1;
    c. You started reading an email but just heard a crash in another room. Mark the email as unread before investigating,
    so you can come back to it later.
          A: UPDATE emails SET read=FALSE where id=2;
