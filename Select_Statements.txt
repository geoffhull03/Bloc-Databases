1. Write out a generic SELECT statement.
    Answer: SELECT column
            FROM table
            WHERE column-title = "Name";

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
    Answer: SELECT FROM WHERE
            SHINE
            FANCY
            WINDOWS
            ??
3. Create a pets database. Create a dogs table using this file. From the dogs table with the columns id,
   name, gender, age, weight, intake_date, breed, and in_foster,
   write statements to select the following pieces of data.
      a) Display the name, gender, and age of all dogs that are part Labrador.

      Answer: SELECT name, gender, age FROM dogs WHERE breed LIKE '%labrador%';
      Output:  name  | gender | age
             --------+--------+-----
             Boujee | F      |   3
             Marley | M      |   0

      b) Display the ids of all dogs that are under 1 year old.

      Answer: SELECT id FROM dogs WHERE age < 1;
      Output:   id
              -------
              10002
              10004
      c) Display the name and age of all dogs that are female and over 35lbs.

      Answer: SELECT name, age FROM dogs WHERE gender = 'F' AND weight > 35;
      Output:  name  | age
             --------+-----
              Boujee |   3

      d) Display all of the information about all dogs that are not Shepherd mixes.

      Answer: SELECT * FROM dogs WHERE breed NOT LIKE '%shepherd%'
      Output:  id   |   name    | gender | age | weight |       breed        | intake_date | in_foster
             -------+-----------+--------+-----+--------+--------------------+-------------+------------
              10001 | Boujee    | F      |   3 |     36 | labrador poodle    | 2017-06-22  |
              10002 | Munchkin  | F      |   0 |      8 | dachsund chihuahua | 2017-01-13  | 2017-01-31
              10004 | Marley    | M      |   0 |     10 | labrador           | 2017-05-04  | 2016-06-20
              10006 | Marmaduke | M      |   7 |    150 | great dane         | 2016-03-22  | 2016-05-15
              10007 | Rosco     | M      |   5 |    180 | rottweiler         | 2017-04-01  |

      e) Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.


      Answer: SELECT id, age, weight breed FROM dogs WHERE breed LIKE '%Great' OR weight > 60;
      Output:   id   | age | breed
              -------+-----+-------
               10006 |   7 |   150
               10007 |   5 |   180

4. From the cats table below, what pieces of data would be returned from these queries?
      a) SELECT name, adoption_date FROM cats;
          Answer: Mushi       2016-03-22
                  Seashell
                  Azul        2016-04-17
                  Victorie    2016-09-01
                  Nala
      b) SELECT name, age FROM cats;
          Answer: Mushi      1
                  Seashell   7
                  Azul       3
                  Victorie   7
                  Nala       1

5. From the cats table, write queries to select the following pieces of data.
      a) Display all the information about all of the available cats.
          Answer: SELECT * FROM cats
      b) Choose one cat of each age to show to potential adopters.
          Answer: SELECT DISTINCT(age), *  from cats
      c) Find all of the names of the cats, so you don’t choose duplicate names for new cats.
          Answer: SELECT name FROM cats


6. List each comparison operator and explain, in your own words, when you would use it. Include a real world example for each.
      <  Less Than. Example -- 'WHERE value < 100' would return all values that are less than 100
      >  Greater Than. Example -- 'WHERE value > 100' would return all values that are greater than 100
      <= Less Than or Equal To. Example -- 'WHERE value <= 100' would return all values that are less than or equal to 100.
      >= Greater Than or Equal To. Example -- 'WHERE value >= 100' would return all values that are greater than or equal to 100
      <> or !=   Not equal to. Example -- WHERE value != 100 would return all indexes where the value is not 100
      =  Equal to. Example -- WHERE value = 100 would return all indexes where the value is equal to 100.

7. From the cats table below, what data would be returned from these queries?

    a) SELECT name FROM cats WHERE gender = ‘F’;
        Seashell
        Nala
    b) SELECT name FROM cats WHERE age <> 3;
        Mushi
        Seashell
        Victoire
        Nala
    c) SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
        00003
        00004
