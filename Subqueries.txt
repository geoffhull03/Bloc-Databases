1. Explain a subquery in your own words.
    Answer: A query that's nested inside of another query.

2. Where can you use a subquery within a SELECT statement?
    Answer: Usually within the WHERE clause, but can also be found in the FROM and SELECT clauses.

3. When would you employ a subquery?
    Answer: Subqueries are advantageous when you have to calculate an aggregate value on-the-fly
    and use it in the outer query for comparison.

4. Explain a row constructor in your own words.
    Answer: A row constructor is an expression that builds a row using values for its member fields.

5. What happens if a row in the subquery result provides a NULL value to the comparison?
    Answer: The result of the comparison will be NULL or not true

6. What are the ways to use a subquery within a WHERE clause?
    Answer: Can be used as a row constructor or an expression. Can also be used with EXISTS, NOT EXISTS, IN, NOT IN, ANY,
    SOME, or ALL operators.

7. Build an employees table and a shifts table with appropriate primary and foreign keys. Then, write queries to find the
following information:
    a) List all employees and all shifts.
        SELECT * FROM shifts, employees;
    b) Create a list of all possible schedules.
        SELECT * FROM shifts LEFT OUTER JOIN on employees AT employee.id = shifts.id

8. Given a dogs table, adoptions table, adopters table, and volunteers table , write queries to retrieve the following information.
 All tables are described below.
    a)Create a list of all volunteers. If the volunteer is fostering a dog, include each dog as well.
        SELECT name FROM volunteer WHERE available_to_foster = "no";
    b) List the adopter’s name and the pet’s name for each animal adopted within the past month to be displayed as a ‘Happy Tail’
    on social media.
        SELECT name FROM adoptors, dogs (SELECT name FROM dog WHERE adoption_date > 11/16/2017) GROUP BY adoptors.adoption_date;
    c) Create a list of adopters who have not yet chosen a dog to adopt and generate all possible combinations of adopters and
    available dogs.
        SELECT name FROM adoptions (SELECT name FROM dogs, cats WHERE adoption_date = NULL) WHERE adoptions.cat AND adoptions.dog = NULL;
    d) Display a list of all cats and all dogs who have not been adopted.
        SELECT name FROM cats, dogs WHERE adoption_date = NULL;

9. Write a query to find the name of the person who adopted Seashell given the tables cats, adoptions, and adopters.

10. Given the tables books (isbn, title, author), transactions (id, checked_out_date, checked_in_date, user_id, isbn), holds
(id, isbn, user_id, rank, date), and patrons (id, name, fine_amount), write queries to find the following information:
    a) To discern if the library should buy more copies of a given book, please provide the names and position,
    in order, of all of the patrons waiting in line for Harry Potter and the Sorcerer’s Stone.
    b) Make a list of all book titles and denote whether or not a copy of that book is checked out.
    c) In an effort to learn which books take longer to read, the librarians would like you to create a list of total
    checked out time by book name in the past month.
    d) In order to learn which items should be retired, make a list of all books that have not been checked out in the past 5 years.
    e) List all of the library patrons. If they have one or more books checked out, correspond the books to the patrons.

11. Given the following tables in an airliner database, find the following information. airplanes
(model, seat capacity, range), flights(flight_number, destination, origin, company, distance, flight_time, airplane_model),
transactions (id, seats_sold, total_revenue, total_cost, flight_number, date)
    a) To determine the most profitable airplanes, find all airplane models where each flight has had over
    100 paying customers in the past month.
    b) To determine the most profitable flights, find all destination-origin pairs where 90% or more
    of the seats have been sold in the past month.
    c) The airline is looking to expand its presence in the US Southeast and globally. Find the total revenue of any
    flight arriving at or departing from Atlanta.

12. Compare the subqueries you've written above. Compare them to the joins you wrote in Checkpoint 6. Which ones are more readable?
Which were more logical to write?
    The ones that were more logical depended on what type of data I was trying to query. For the most part, the subqueries are more
    readable because it literally spells out what you're trying to query. The join statements can become convoluted and complex.
